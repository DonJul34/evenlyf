# Generated by Django 5.2.4 on 2025-08-01 16:22

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name="Nom de l'activité")),
                ('activity_type', models.CharField(choices=[('BAR_GAMES', 'Bar à jeux'), ('BOWLING', 'Bowling'), ('KARAOKE', 'Karaoké'), ('ESCAPE_GAME', 'Escape Game'), ('RESTAURANT', 'Restaurant'), ('CINEMA', 'Cinéma'), ('MUSEUM', 'Musée'), ('CONCERT', 'Concert'), ('SPORT', 'Activité sportive'), ('OTHER', 'Autre')], max_length=20, verbose_name="Type d'activité")),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icône')),
                ('base_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prix de base')),
                ('duration_hours', models.FloatField(default=2.0, verbose_name='Durée en heures')),
                ('min_participants', models.IntegerField(default=6, verbose_name='Minimum de participants')),
                ('max_participants', models.IntegerField(default=6, verbose_name='Maximum de participants')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
            ],
            options={
                'verbose_name': 'Activité',
                'verbose_name_plural': 'Activités',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EventFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note générale')),
                ('venue_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note du lieu')),
                ('group_compatibility_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Compatibilité du groupe')),
                ('activity_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name="Note de l'activité")),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('would_recommend', models.BooleanField(default=True, verbose_name='Recommanderait')),
                ('would_join_again', models.BooleanField(default=True, verbose_name='Participerait à nouveau')),
                ('suggestions', models.TextField(blank=True, verbose_name='Suggestions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': "Retour d'expérience",
                'verbose_name_plural': "Retours d'expérience",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('CONFIRMED', 'Confirmé'), ('CANCELLED', 'Annulé'), ('NO_SHOW', 'Absent'), ('COMPLETED', 'Participé')], default='PENDING', max_length=20, verbose_name='Statut')),
                ('dietary_restrictions', models.TextField(blank=True, verbose_name='Restrictions alimentaires')),
                ('special_requests', models.TextField(blank=True, verbose_name='Demandes spéciales')),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'inscription")),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de confirmation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
            ],
            options={
                'verbose_name': 'Inscription à un événement',
                'verbose_name_plural': 'Inscriptions aux événements',
                'ordering': ['-registered_at'],
            },
        ),
        migrations.CreateModel(
            name='MatchingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Nom du groupe')),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('CONFIRMED', 'Confirmé'), ('ACTIVE', 'Actif'), ('COMPLETED', 'Terminé'), ('CANCELLED', 'Annulé')], default='PENDING', max_length=20, verbose_name='Statut')),
                ('average_compatibility_score', models.FloatField(default=0.0, verbose_name='Score de compatibilité moyen')),
                ('personality_balance_score', models.FloatField(default=0.0, verbose_name="Score d'équilibre des personnalités")),
                ('passion_overlap_score', models.FloatField(default=0.0, verbose_name='Score de chevauchement des passions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de confirmation')),
            ],
            options={
                'verbose_name': 'Groupe de matching',
                'verbose_name_plural': 'Groupes de matching',
                'ordering': ['-average_compatibility_score'],
            },
        ),
        migrations.CreateModel(
            name='MatchingGroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('INVITED', 'Invité'), ('ACTIVE', 'Actif'), ('DECLINED', 'Refusé'), ('LEFT', 'A quitté')], default='INVITED', max_length=20, verbose_name='Statut')),
                ('compatibility_score', models.FloatField(default=0.0, verbose_name='Score de compatibilité individuel')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('status_updated_at', models.DateTimeField(auto_now=True, verbose_name='Statut modifié le')),
            ],
            options={
                'verbose_name': 'Membre de groupe',
                'verbose_name_plural': 'Membres de groupes',
                'ordering': ['-compatibility_score'],
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom du lieu')),
                ('address', models.TextField(verbose_name='Adresse')),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Code postal')),
                ('phone', models.CharField(blank=True, max_length=15, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('capacity', models.IntegerField(default=50, verbose_name='Capacité')),
                ('has_accessibility', models.BooleanField(default=False, verbose_name='Accessible PMR')),
                ('has_parking', models.BooleanField(default=False, verbose_name='Parking disponible')),
                ('has_terrace', models.BooleanField(default=False, verbose_name='Terrasse')),
                ('rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Note moyenne')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Lieu vérifié')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
            ],
            options={
                'verbose_name': 'Lieu',
                'verbose_name_plural': 'Lieux',
                'ordering': ['city', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('scheduled_date', models.DateTimeField(verbose_name='Date programmée')),
                ('registration_deadline', models.DateTimeField(verbose_name="Date limite d'inscription")),
                ('duration_hours', models.FloatField(default=2.0, verbose_name='Durée en heures')),
                ('max_participants', models.IntegerField(default=6, verbose_name='Maximum de participants')),
                ('current_participants', models.IntegerField(default=0, verbose_name='Participants actuels')),
                ('price_per_person', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix par personne')),
                ('includes_food', models.BooleanField(default=False, verbose_name='Inclut la nourriture')),
                ('includes_drinks', models.BooleanField(default=False, verbose_name='Inclut les boissons')),
                ('status', models.CharField(choices=[('DRAFT', 'Brouillon'), ('OPEN', 'Ouvert aux inscriptions'), ('MATCHING', 'En cours de matching'), ('CONFIRMED', 'Confirmé'), ('IN_PROGRESS', 'En cours'), ('COMPLETED', 'Terminé'), ('CANCELLED', 'Annulé')], default='DRAFT', max_length=20, verbose_name='Statut')),
                ('is_public', models.BooleanField(default=True, verbose_name='Événement public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='events.activity')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['-scheduled_date'],
            },
        ),
    ]
